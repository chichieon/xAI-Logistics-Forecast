project: xAI-Logistics-Forecast

code_style:
  python:
    - rule: "Follow PEP 8 style guide"
    - rule: "Use 4 spaces for indentation"
    - rule: "Limit line length to 88 characters (Black formatter standard)"
    - rule: "Include clear docstrings for functions and classes"
    - rule: "Use snake_case for variables and functions"
    - rule: "Use PascalCase for class names"
    - rule: "Use UPPER_CASE for constants"
  
  project_structure:
    - rule: "Use modular structure"
    - rule: "Group related functionality in the same directory"
    - directories:
      config: "Store configuration files"
      data: "Store data processing related code"
      models: "Store model related code"
      dashboard: "Store dashboard related code"

development_workflow:
  version_control:
    - rule: "Develop features in branches with feature/ prefix"
    - rule: "Fix bugs in branches with bugfix/ prefix"
    - rule: "Write clear and descriptive commit messages"
    - rule: "Use prefixes like 'feat:', 'fix:', 'docs:', 'refactor:' in commit messages"
  
  code_review:
    - rule: "All code changes must go through review"
    - rule: "Focus code reviews on functionality, readability, and performance"
    - rule: "Provide constructive feedback as a reviewer"

testing:
  requirements:
    - rule: "Include unit tests for all new features"
    - rule: "Maintain minimum 80% test coverage"
    - rule: "Use pytest for testing"
    - rule: "Ensure tests are independent and repeatable"
  
  structure:
    - rule: "Store test files in tests/ directory"
    - rule: "Name test files as test_*.py"
    - rule: "Match test module structure to the module being tested"

documentation:
  code:
    - rule: "Include clear docstrings for all functions and classes"
    - rule: "Follow Google style for docstrings"
    - rule: "Add inline comments for complex logic"
  
  project:
    - rule: "Include project overview, installation, and usage in README.md"
    - rule: "Use automatic tools for API documentation"
    - rule: "Store user manuals in docs/ directory"

data_handling:
  security:
    - rule: "Encrypt sensitive data for storage"
    - rule: "Manage API keys and passwords through environment variables or secure storage"
    - rule: "Collect and process minimal user data"
  
  quality:
    - rule: "Validate all input data"
    - rule: "Document methods for handling missing values and outliers"
    - rule: "Ensure data preprocessing is reproducible"

deployment:
  environment:
    - rule: "Clearly separate development, testing, and production environments"
    - rule: "Manage configuration files for each environment"
    - rule: "Make environment transitions easy"
  
  process:
    - rule: "Ensure all tests pass before deployment"
    - rule: "Use automated pipelines for deployment"
    - rule: "Prepare rollback strategies"

performance:
  code_optimization:
    - rule: "Regularly profile for performance bottlenecks"
    - rule: "Use efficient algorithms for large data processing"
    - rule: "Monitor and optimize memory usage"
  
  query_optimization:
    - rule: "Optimize BigQuery queries for cost and performance"
    - rule: "Apply caching strategies for frequently used queries"
    - rule: "Use partitioning for large datasets" 
